#!/usr/bin/env ruby
#
# Spider for downloading assets from CDNs. Requires Ruby 1.9.
#

if RUBY_VERSION.split('.')[1].to_i < 9
  puts "Requires Ruby 1.9."; exit
end

def usage
  script = File.basename(__FILE__)
  puts "Usage:"
  puts "  #{script} [options] <cdn> <library> <version>"
  puts ""
  puts "Options:"
  puts "  -w, --overwrite    overwrite existing files"
  puts "  -h, --help         print this help"
  puts ""
  puts "Example:"
  puts "  #{script} google jquery 1.5.2"
end

require 'fileutils'
require 'net/http'
require 'uri'
require 'getoptlong'

#
# parse arguments
#
$overwrite = false

GetoptLong.new(
  ['--help'      , '-h' , GetoptLong::NO_ARGUMENT],
  ['--overwrite' , '-w' , GetoptLong::NO_ARGUMENT]
).each do |opt,arg|
  case opt
  when "--help"
    usage; exit
  when "--overwrite"
    $overwrite = true
  end
end

$cdn     = ARGV[0]
$library = ARGV[1]
$version = ARGV[2]

if $version.nil? or $version == ""
  usage; exit
end

def base_url
  {
    "google"    => "http://ajax.googleapis.com/ajax/libs/",
    "microsoft" => "http://ajax.aspnetcdn.com/ajax/",
  }[$cdn]
end

def verify_directory(dirname)
  FileUtils.mkdir_p(dirname) unless Dir.exists?(dirname)
end

def need_file?(file)
  local = "#{$cdn}/#{$library}/#{file}"
  $overwrite or !File.exists?(local)
end

def get_http(file)
  file = "#{$library}/#{file}"
  uri  = URI.parse(base_url + file)
  http = Net::HTTP.new(uri.host, uri.port)
  http.request(Net::HTTP::Get.new(uri.request_uri))
end

def read_file(file)
  res = get_http(file)
  res.body if res.code == "200"
end

def fetch_file(file)
  return unless need_file?(file)

  print "Fetching #{file} "

  res = get_http(file)

  if res.code == "200"
    local = "#{$cdn}/#{$library}/#{file}"
    verify_directory(File.dirname(local))
    content = res.body
    File.open(local, 'w'){ |f| f.write(content) }
    puts "[OK]"
  else
    content = nil
    puts "[error: #{res.code}]"
  end
  content
end

case $library
when 'jquery'
  if $cdn == "google"
    fetch_file "#{$version}/jquery.js"
    fetch_file "#{$version}/jquery.min.js"
  elsif $cdn == "microsoft"
    fetch_file "jquery-#{$version}.js"
    fetch_file "jquery-#{$version}.min.js"
  end

when 'jqueryui'
  $library = "jquery.ui" if $cdn == "microsoft"
  fetch_file "#{$version}/jquery-ui.min.js"
  themes = %w[base ui-lightness ui-darkness smoothness start redmond sunny
    overcast le-frog flick pepper-grinder eggplant dark-hive cupertino
    south-street blitzer humanity hot-sneaks excite-bike vader dot-luv
    mint-choc black-tie trontastic swanky-purse]
  themes.each do |theme|
    file = "#{$version}/themes/#{theme}/jquery-ui.css"
    if css = need_file?(file) ? fetch_file(file) : read_file(file)
      fetch_file("#{$version}/themes/#{theme}/minified/jquery-ui.min.css") if theme == "base"
      images = css.scan(/url\(\s*['"]?([^'"\s)]+)['"]?\s*\)/).map{ |i| i[0] }.uniq
      images.reject!{ |i| i.match(/^data:/) } # embedded image data
      images.each{ |image| fetch_file("#{$version}/themes/#{theme}/#{image}") }
    else
      puts "Error: #{theme} theme not found."
    end
  end
end
